using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace TutoriumApi.Migrations
{
    /// <inheritdoc />
    public partial class Second : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AlterColumn<decimal>(
                name: "Rating",
                table: "Reviews",
                type: "numeric(3,1)",
                nullable: false,
                oldClrType: typeof(decimal),
                oldType: "numeric(2,1)");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 162, 202, 51, 189, 55, 188, 235, 85, 219, 100, 9, 117, 195, 195, 9, 118, 109, 134, 9, 48, 46, 96, 221, 159, 33, 142, 133, 119, 60, 4, 232, 189, 22, 157, 70, 172, 218, 50, 91, 130, 65, 134, 239, 153, 211, 68, 1, 100, 181, 80, 97, 33, 8, 31, 63, 36, 108, 223, 167, 146, 251, 151, 118, 35 }, new byte[] { 91, 251, 157, 206, 246, 107, 236, 51, 214, 10, 128, 111, 220, 255, 24, 184, 253, 177, 165, 96, 66, 113, 227, 61, 170, 166, 222, 99, 176, 94, 11, 87, 173, 81, 27, 245, 99, 3, 228, 0, 52, 149, 149, 114, 98, 206, 179, 53, 91, 255, 68, 178, 118, 62, 255, 94, 16, 209, 19, 243, 253, 110, 2, 109, 88, 178, 51, 18, 43, 91, 235, 136, 223, 164, 99, 168, 150, 62, 8, 186, 161, 54, 201, 179, 31, 237, 163, 84, 100, 59, 250, 59, 19, 20, 20, 234, 211, 193, 169, 184, 86, 37, 34, 240, 224, 90, 49, 73, 125, 37, 108, 211, 92, 170, 125, 238, 227, 60, 232, 76, 168, 103, 152, 16, 51, 1, 18, 166 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 162, 202, 51, 189, 55, 188, 235, 85, 219, 100, 9, 117, 195, 195, 9, 118, 109, 134, 9, 48, 46, 96, 221, 159, 33, 142, 133, 119, 60, 4, 232, 189, 22, 157, 70, 172, 218, 50, 91, 130, 65, 134, 239, 153, 211, 68, 1, 100, 181, 80, 97, 33, 8, 31, 63, 36, 108, 223, 167, 146, 251, 151, 118, 35 }, new byte[] { 91, 251, 157, 206, 246, 107, 236, 51, 214, 10, 128, 111, 220, 255, 24, 184, 253, 177, 165, 96, 66, 113, 227, 61, 170, 166, 222, 99, 176, 94, 11, 87, 173, 81, 27, 245, 99, 3, 228, 0, 52, 149, 149, 114, 98, 206, 179, 53, 91, 255, 68, 178, 118, 62, 255, 94, 16, 209, 19, 243, 253, 110, 2, 109, 88, 178, 51, 18, 43, 91, 235, 136, 223, 164, 99, 168, 150, 62, 8, 186, 161, 54, 201, 179, 31, 237, 163, 84, 100, 59, 250, 59, 19, 20, 20, 234, 211, 193, 169, 184, 86, 37, 34, 240, 224, 90, 49, 73, 125, 37, 108, 211, 92, 170, 125, 238, 227, 60, 232, 76, 168, 103, 152, 16, 51, 1, 18, 166 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 162, 202, 51, 189, 55, 188, 235, 85, 219, 100, 9, 117, 195, 195, 9, 118, 109, 134, 9, 48, 46, 96, 221, 159, 33, 142, 133, 119, 60, 4, 232, 189, 22, 157, 70, 172, 218, 50, 91, 130, 65, 134, 239, 153, 211, 68, 1, 100, 181, 80, 97, 33, 8, 31, 63, 36, 108, 223, 167, 146, 251, 151, 118, 35 }, new byte[] { 91, 251, 157, 206, 246, 107, 236, 51, 214, 10, 128, 111, 220, 255, 24, 184, 253, 177, 165, 96, 66, 113, 227, 61, 170, 166, 222, 99, 176, 94, 11, 87, 173, 81, 27, 245, 99, 3, 228, 0, 52, 149, 149, 114, 98, 206, 179, 53, 91, 255, 68, 178, 118, 62, 255, 94, 16, 209, 19, 243, 253, 110, 2, 109, 88, 178, 51, 18, 43, 91, 235, 136, 223, 164, 99, 168, 150, 62, 8, 186, 161, 54, 201, 179, 31, 237, 163, 84, 100, 59, 250, 59, 19, 20, 20, 234, 211, 193, 169, 184, 86, 37, 34, 240, 224, 90, 49, 73, 125, 37, 108, 211, 92, 170, 125, 238, 227, 60, 232, 76, 168, 103, 152, 16, 51, 1, 18, 166 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 162, 202, 51, 189, 55, 188, 235, 85, 219, 100, 9, 117, 195, 195, 9, 118, 109, 134, 9, 48, 46, 96, 221, 159, 33, 142, 133, 119, 60, 4, 232, 189, 22, 157, 70, 172, 218, 50, 91, 130, 65, 134, 239, 153, 211, 68, 1, 100, 181, 80, 97, 33, 8, 31, 63, 36, 108, 223, 167, 146, 251, 151, 118, 35 }, new byte[] { 91, 251, 157, 206, 246, 107, 236, 51, 214, 10, 128, 111, 220, 255, 24, 184, 253, 177, 165, 96, 66, 113, 227, 61, 170, 166, 222, 99, 176, 94, 11, 87, 173, 81, 27, 245, 99, 3, 228, 0, 52, 149, 149, 114, 98, 206, 179, 53, 91, 255, 68, 178, 118, 62, 255, 94, 16, 209, 19, 243, 253, 110, 2, 109, 88, 178, 51, 18, 43, 91, 235, 136, 223, 164, 99, 168, 150, 62, 8, 186, 161, 54, 201, 179, 31, 237, 163, 84, 100, 59, 250, 59, 19, 20, 20, 234, 211, 193, 169, 184, 86, 37, 34, 240, 224, 90, 49, 73, 125, 37, 108, 211, 92, 170, 125, 238, 227, 60, 232, 76, 168, 103, 152, 16, 51, 1, 18, 166 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 162, 202, 51, 189, 55, 188, 235, 85, 219, 100, 9, 117, 195, 195, 9, 118, 109, 134, 9, 48, 46, 96, 221, 159, 33, 142, 133, 119, 60, 4, 232, 189, 22, 157, 70, 172, 218, 50, 91, 130, 65, 134, 239, 153, 211, 68, 1, 100, 181, 80, 97, 33, 8, 31, 63, 36, 108, 223, 167, 146, 251, 151, 118, 35 }, new byte[] { 91, 251, 157, 206, 246, 107, 236, 51, 214, 10, 128, 111, 220, 255, 24, 184, 253, 177, 165, 96, 66, 113, 227, 61, 170, 166, 222, 99, 176, 94, 11, 87, 173, 81, 27, 245, 99, 3, 228, 0, 52, 149, 149, 114, 98, 206, 179, 53, 91, 255, 68, 178, 118, 62, 255, 94, 16, 209, 19, 243, 253, 110, 2, 109, 88, 178, 51, 18, 43, 91, 235, 136, 223, 164, 99, 168, 150, 62, 8, 186, 161, 54, 201, 179, 31, 237, 163, 84, 100, 59, 250, 59, 19, 20, 20, 234, 211, 193, 169, 184, 86, 37, 34, 240, 224, 90, 49, 73, 125, 37, 108, 211, 92, 170, 125, 238, 227, 60, 232, 76, 168, 103, 152, 16, 51, 1, 18, 166 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AlterColumn<decimal>(
                name: "Rating",
                table: "Reviews",
                type: "numeric(2,1)",
                nullable: false,
                oldClrType: typeof(decimal),
                oldType: "numeric(3,1)");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 234, 18, 151, 153, 51, 15, 195, 253, 25, 2, 31, 196, 247, 110, 20, 4, 201, 232, 254, 12, 150, 87, 67, 166, 247, 149, 186, 41, 215, 168, 27, 2, 106, 88, 38, 153, 23, 179, 223, 91, 3, 192, 184, 123, 204, 151, 60, 27, 66, 119, 242, 9, 209, 192, 165, 227, 170, 157, 182, 103, 144, 60, 172, 87 }, new byte[] { 139, 248, 149, 249, 3, 213, 126, 244, 47, 171, 90, 224, 123, 102, 175, 247, 106, 208, 237, 224, 12, 83, 67, 141, 149, 170, 93, 234, 176, 12, 221, 30, 171, 135, 12, 166, 131, 199, 43, 122, 32, 139, 54, 220, 242, 254, 18, 228, 162, 240, 109, 14, 116, 170, 33, 65, 202, 170, 73, 228, 125, 203, 1, 170, 112, 66, 63, 23, 47, 0, 1, 189, 135, 17, 212, 200, 171, 144, 86, 131, 202, 249, 52, 209, 243, 201, 73, 31, 219, 66, 9, 94, 156, 185, 42, 103, 220, 11, 181, 142, 169, 130, 236, 129, 5, 106, 94, 214, 110, 172, 192, 177, 94, 30, 189, 167, 219, 184, 53, 246, 46, 241, 232, 251, 0, 160, 108, 247 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 234, 18, 151, 153, 51, 15, 195, 253, 25, 2, 31, 196, 247, 110, 20, 4, 201, 232, 254, 12, 150, 87, 67, 166, 247, 149, 186, 41, 215, 168, 27, 2, 106, 88, 38, 153, 23, 179, 223, 91, 3, 192, 184, 123, 204, 151, 60, 27, 66, 119, 242, 9, 209, 192, 165, 227, 170, 157, 182, 103, 144, 60, 172, 87 }, new byte[] { 139, 248, 149, 249, 3, 213, 126, 244, 47, 171, 90, 224, 123, 102, 175, 247, 106, 208, 237, 224, 12, 83, 67, 141, 149, 170, 93, 234, 176, 12, 221, 30, 171, 135, 12, 166, 131, 199, 43, 122, 32, 139, 54, 220, 242, 254, 18, 228, 162, 240, 109, 14, 116, 170, 33, 65, 202, 170, 73, 228, 125, 203, 1, 170, 112, 66, 63, 23, 47, 0, 1, 189, 135, 17, 212, 200, 171, 144, 86, 131, 202, 249, 52, 209, 243, 201, 73, 31, 219, 66, 9, 94, 156, 185, 42, 103, 220, 11, 181, 142, 169, 130, 236, 129, 5, 106, 94, 214, 110, 172, 192, 177, 94, 30, 189, 167, 219, 184, 53, 246, 46, 241, 232, 251, 0, 160, 108, 247 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 234, 18, 151, 153, 51, 15, 195, 253, 25, 2, 31, 196, 247, 110, 20, 4, 201, 232, 254, 12, 150, 87, 67, 166, 247, 149, 186, 41, 215, 168, 27, 2, 106, 88, 38, 153, 23, 179, 223, 91, 3, 192, 184, 123, 204, 151, 60, 27, 66, 119, 242, 9, 209, 192, 165, 227, 170, 157, 182, 103, 144, 60, 172, 87 }, new byte[] { 139, 248, 149, 249, 3, 213, 126, 244, 47, 171, 90, 224, 123, 102, 175, 247, 106, 208, 237, 224, 12, 83, 67, 141, 149, 170, 93, 234, 176, 12, 221, 30, 171, 135, 12, 166, 131, 199, 43, 122, 32, 139, 54, 220, 242, 254, 18, 228, 162, 240, 109, 14, 116, 170, 33, 65, 202, 170, 73, 228, 125, 203, 1, 170, 112, 66, 63, 23, 47, 0, 1, 189, 135, 17, 212, 200, 171, 144, 86, 131, 202, 249, 52, 209, 243, 201, 73, 31, 219, 66, 9, 94, 156, 185, 42, 103, 220, 11, 181, 142, 169, 130, 236, 129, 5, 106, 94, 214, 110, 172, 192, 177, 94, 30, 189, 167, 219, 184, 53, 246, 46, 241, 232, 251, 0, 160, 108, 247 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 234, 18, 151, 153, 51, 15, 195, 253, 25, 2, 31, 196, 247, 110, 20, 4, 201, 232, 254, 12, 150, 87, 67, 166, 247, 149, 186, 41, 215, 168, 27, 2, 106, 88, 38, 153, 23, 179, 223, 91, 3, 192, 184, 123, 204, 151, 60, 27, 66, 119, 242, 9, 209, 192, 165, 227, 170, 157, 182, 103, 144, 60, 172, 87 }, new byte[] { 139, 248, 149, 249, 3, 213, 126, 244, 47, 171, 90, 224, 123, 102, 175, 247, 106, 208, 237, 224, 12, 83, 67, 141, 149, 170, 93, 234, 176, 12, 221, 30, 171, 135, 12, 166, 131, 199, 43, 122, 32, 139, 54, 220, 242, 254, 18, 228, 162, 240, 109, 14, 116, 170, 33, 65, 202, 170, 73, 228, 125, 203, 1, 170, 112, 66, 63, 23, 47, 0, 1, 189, 135, 17, 212, 200, 171, 144, 86, 131, 202, 249, 52, 209, 243, 201, 73, 31, 219, 66, 9, 94, 156, 185, 42, 103, 220, 11, 181, 142, 169, 130, 236, 129, 5, 106, 94, 214, 110, 172, 192, 177, 94, 30, 189, 167, 219, 184, 53, 246, 46, 241, 232, 251, 0, 160, 108, 247 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 234, 18, 151, 153, 51, 15, 195, 253, 25, 2, 31, 196, 247, 110, 20, 4, 201, 232, 254, 12, 150, 87, 67, 166, 247, 149, 186, 41, 215, 168, 27, 2, 106, 88, 38, 153, 23, 179, 223, 91, 3, 192, 184, 123, 204, 151, 60, 27, 66, 119, 242, 9, 209, 192, 165, 227, 170, 157, 182, 103, 144, 60, 172, 87 }, new byte[] { 139, 248, 149, 249, 3, 213, 126, 244, 47, 171, 90, 224, 123, 102, 175, 247, 106, 208, 237, 224, 12, 83, 67, 141, 149, 170, 93, 234, 176, 12, 221, 30, 171, 135, 12, 166, 131, 199, 43, 122, 32, 139, 54, 220, 242, 254, 18, 228, 162, 240, 109, 14, 116, 170, 33, 65, 202, 170, 73, 228, 125, 203, 1, 170, 112, 66, 63, 23, 47, 0, 1, 189, 135, 17, 212, 200, 171, 144, 86, 131, 202, 249, 52, 209, 243, 201, 73, 31, 219, 66, 9, 94, 156, 185, 42, 103, 220, 11, 181, 142, 169, 130, 236, 129, 5, 106, 94, 214, 110, 172, 192, 177, 94, 30, 189, 167, 219, 184, 53, 246, 46, 241, 232, 251, 0, 160, 108, 247 } });
        }
    }
}
